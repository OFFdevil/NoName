# Отчёт об проделанной работe
## Даниил Плотников
### Пользовался:
    Используемый язык: python
    Библиотеки для написания lexer и parser: ply
    Библиотека для построения AST: pydot
### Придумывание языка
Были некоторые трудности, чтобы конкретизировать синтаксис языка. Например: проблемы с осознанием того, что такое "дизъюнкция" и "конъюнкция" в данном абстрактом синтаксисе, и как можно сделать конкретным синтаксисом. Решение: `and = ;`, `or = ,`
### Написание лексера
Особых трудностей не было. Некоторая сложность произошла, когда нужно было записывать в токен тело функции при определении.
### Написание парсера
Трудности:
1. Для меня немного непривычно было писать на python большую программу(никогда этого не делал), поэтому думаю можно этот пункт оставить, хотя довольно сложно не было разобраться в данном языке
2. Была проблема с придумывание КСГ для языка, т.к. я думал, что это должно работать, как лексер, то есть проходится по токенам и проверяет, поэтому потратил время на осознание этой ошибки.
3. Проблема с однострочными комментариями. Думал, что можно сделать однострочные комментарии такими, что перед ними можно писать пробелы, но тогда появилась проблема, что парсер начинает в некоторых случаях проверять сначала на комментарий, но оказывается, что не подходит и происходит ошибка, т.к. пробелы он уже прошёл. Решение: нельзя писать пробелы перед однострочными комментариями
4. Придумывание проверки на то, что в параметры функции имеют разные имена. Было тяжело, но я придумал решение с стеком.
5. Небольшая проблемка была с multiple определением функции с определенными параметрами, не очень понимал, как можно это делать, много времени потратил на придумывание решения с стеком и не получилось. Написал хеш-функцию! Работает хорошо, хоть есть маленькая вероятность ошибки!
### Планы на будущее:
1. Более красиво сделать дерево вывода
2. Переделать, хорошо бы, если можно было ещё пробелы перед // ставить. Идеи: ставить вместо пробелов "_" будет нормально работать, но выглядеть...хм, а кому это важно)

## Егор Курагин
### TODO что сделал(подробно) и как сделал, что использовал 
### TODO с чем были проблемы и как решил
(пользование github) :-)